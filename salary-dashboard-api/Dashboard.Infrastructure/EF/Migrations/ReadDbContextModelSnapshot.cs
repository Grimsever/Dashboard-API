// <auto-generated />
using System;
using Dashboard.Infrastructure.EF.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Dashboard.Infrastructure.EF.Migrations
{
    [DbContext(typeof(ReadDbContext))]
    partial class ReadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("income")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Dashboard.Infrastructure.EF.Models.IncomeListReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("CurrentSalary")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IncomeLists");
                });

            modelBuilder.Entity("Dashboard.Infrastructure.EF.Models.IncomeReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("CurrencyRate")
                        .HasColumnType("double precision");

                    b.Property<int>("CurrencyType")
                        .HasColumnType("integer");

                    b.Property<decimal>("IncomeAmount")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("IncomeListId")
                        .HasColumnType("uuid");

                    b.Property<int>("IncomeType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("IncomedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PercentSalary")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IncomeListId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("Dashboard.Infrastructure.EF.Models.UserReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Dashboard.Infrastructure.EF.Models.IncomeListReadModel", b =>
                {
                    b.HasOne("Dashboard.Infrastructure.EF.Models.UserReadModel", "User")
                        .WithMany("IncomeList")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dashboard.Infrastructure.EF.Models.IncomeReadModel", b =>
                {
                    b.HasOne("Dashboard.Infrastructure.EF.Models.IncomeListReadModel", "IncomeList")
                        .WithMany("Incomes")
                        .HasForeignKey("IncomeListId");

                    b.Navigation("IncomeList");
                });

            modelBuilder.Entity("Dashboard.Infrastructure.EF.Models.IncomeListReadModel", b =>
                {
                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("Dashboard.Infrastructure.EF.Models.UserReadModel", b =>
                {
                    b.Navigation("IncomeList");
                });
#pragma warning restore 612, 618
        }
    }
}
